/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testes;


import java.awt.BorderLayout;
import java.awt.Container;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import rmi.InterfaceRmiImp;

/**
 *
 * @author josepedro
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    private Image imagem;
    private int noise;
    private int templateSize;
    private String noiseType;
    private boolean lowpass;
    private int ratio;

    public Main() {
        noise = 0;
        templateSize = 1;
        noiseType = "Gaussian";
        lowpass = false;
        ratio = 5;
        String s = null;
        //setLocationRelativeTo(this);
        //setExtendedState(MAXIMIZED_BOTH);
        setTitle("Processamento de Imagens RMI");
        
       
        initComponents();
         ocultaJLP();
        liberaBotoes(false);
        this.setBounds(300, 200, 820, 300);

    }

    private void liberaBotoes(Boolean b) {
        jLPAveraging.setVisible(b);
        jCBTipo.setEnabled(b);
        jBProcessar.setEnabled(b);
        jBInserirBD.setEnabled(b);
        jBSalvarImg.setEnabled(b);
        jCBTamSaida.setEnabled(b);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bGRuido = new javax.swing.ButtonGroup();
        bGFiltro = new javax.swing.ButtonGroup();
        jBAbrirImg = new javax.swing.JButton();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        jBProcessar = new javax.swing.JButton();
        jBSalvarImg = new javax.swing.JButton();
        jBInserirBD = new javax.swing.JButton();
        jLPAveraging = new javax.swing.JLayeredPane();
        jLTamModelo = new javax.swing.JLabel();
        jSTamModelo = new javax.swing.JSlider();
        jLTipoRuido = new javax.swing.JLabel();
        jRBGaussian = new javax.swing.JRadioButton();
        jRBCondiment = new javax.swing.JRadioButton();
        jSNoise = new javax.swing.JSlider();
        jLTaxaRuido = new javax.swing.JLabel();
        jLTipoFiltro = new javax.swing.JLabel();
        jCBTipo = new javax.swing.JComboBox();
        jBSair = new javax.swing.JButton();
        jLTamSaida = new javax.swing.JLabel();
        jCBTamSaida = new javax.swing.JComboBox();
        jLPFourier = new javax.swing.JLayeredPane();
        jLFiltroF = new javax.swing.JLabel();
        jRBHighPass = new javax.swing.JRadioButton();
        jRBLowPass = new javax.swing.JRadioButton();
        jLRaio = new javax.swing.JLabel();
        jSRaio = new javax.swing.JSlider();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMArquivo = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jBAbrirImg.setText("Abrir Imagem");
        jBAbrirImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAbrirImgActionPerformed(evt);
            }
        });

        jBProcessar.setText("Processar Imagem");
        jBProcessar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBProcessarActionPerformed(evt);
            }
        });

        jBSalvarImg.setText("Salvar Imagem");

        jBInserirBD.setText("Inserir no BD");
        jBInserirBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInserirBDActionPerformed(evt);
            }
        });

        jLTamModelo.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLTamModelo.setText("Tamanho do Modelo:");

        jSTamModelo.setMajorTickSpacing(3);
        jSTamModelo.setMaximum(17);
        jSTamModelo.setMinimum(1);
        jSTamModelo.setMinorTickSpacing(1);
        jSTamModelo.setPaintLabels(true);
        jSTamModelo.setPaintTicks(true);
        jSTamModelo.setSnapToTicks(true);
        jSTamModelo.setValue(1);

        jLTipoRuido.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLTipoRuido.setText("Tipo de Ruído:");

        bGRuido.add(jRBGaussian);
        jRBGaussian.setText("Gaussian");
        jRBGaussian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBGaussianActionPerformed(evt);
            }
        });

        bGRuido.add(jRBCondiment);
        jRBCondiment.setText("Condiment");
        jRBCondiment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBCondimentActionPerformed(evt);
            }
        });

        jSNoise.setMajorTickSpacing(10);
        jSNoise.setMaximum(50);
        jSNoise.setMinorTickSpacing(2);
        jSNoise.setPaintLabels(true);
        jSNoise.setPaintTicks(true);
        jSNoise.setToolTipText("");
        jSNoise.setValue(0);

        jLTaxaRuido.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLTaxaRuido.setText("Taxa de Ruído: ");

        javax.swing.GroupLayout jLPAveragingLayout = new javax.swing.GroupLayout(jLPAveraging);
        jLPAveraging.setLayout(jLPAveragingLayout);
        jLPAveragingLayout.setHorizontalGroup(
            jLPAveragingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLPAveragingLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jLPAveragingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLTipoRuido)
                    .addComponent(jLTamModelo)
                    .addComponent(jLTaxaRuido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLPAveragingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLPAveragingLayout.createSequentialGroup()
                        .addComponent(jRBGaussian)
                        .addGap(18, 18, 18)
                        .addComponent(jRBCondiment)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 174, Short.MAX_VALUE))
                    .addComponent(jSTamModelo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSNoise, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jLPAveragingLayout.setVerticalGroup(
            jLPAveragingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLPAveragingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLPAveragingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLTipoRuido, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRBGaussian)
                    .addComponent(jRBCondiment))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLPAveragingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSTamModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLTamModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLPAveragingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSNoise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLTaxaRuido))
                .addGap(19, 19, 19))
        );
        jLPAveraging.setLayer(jLTamModelo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLPAveraging.setLayer(jSTamModelo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLPAveraging.setLayer(jLTipoRuido, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLPAveraging.setLayer(jRBGaussian, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLPAveraging.setLayer(jRBCondiment, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLPAveraging.setLayer(jSNoise, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLPAveraging.setLayer(jLTaxaRuido, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLTipoFiltro.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLTipoFiltro.setText("Tipo do Filtro:");

        jCBTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Averaging", "Fourier", "GaussianFiltering", "MedianFiltering", "NoMax", "Thresholding" }));
        jCBTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBTipoActionPerformed(evt);
            }
        });

        jBSair.setText("Sair");
        jBSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSairActionPerformed(evt);
            }
        });

        jLTamSaida.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLTamSaida.setText("Tamanho da Saída: ");

        jCBTamSaida.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tam. Original", "32", "64", "100", "128", "200", "256", "300", "360", "480", "512", "600", "640", "700", "768", "800", "840", "900", "980", "1000", "1024" }));
        jCBTamSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBTamSaidaActionPerformed(evt);
            }
        });

        jLFiltroF.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLFiltroF.setText("Filtro: ");

        bGFiltro.add(jRBHighPass);
        jRBHighPass.setText("High Pass");
        jRBHighPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBHighPassActionPerformed(evt);
            }
        });

        bGFiltro.add(jRBLowPass);
        jRBLowPass.setText("Low Pass");
        jRBLowPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBLowPassActionPerformed(evt);
            }
        });

        jLRaio.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLRaio.setText("Raio:");

        jSRaio.setMajorTickSpacing(10);
        jSRaio.setMinimum(5);
        jSRaio.setMinorTickSpacing(5);
        jSRaio.setPaintLabels(true);
        jSRaio.setPaintTicks(true);
        jSRaio.setSnapToTicks(true);
        jSRaio.setToolTipText("");
        jSRaio.setValue(6);

        javax.swing.GroupLayout jLPFourierLayout = new javax.swing.GroupLayout(jLPFourier);
        jLPFourier.setLayout(jLPFourierLayout);
        jLPFourierLayout.setHorizontalGroup(
            jLPFourierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLPFourierLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLPFourierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLPFourierLayout.createSequentialGroup()
                        .addComponent(jLFiltroF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRBHighPass)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRBLowPass))
                    .addGroup(jLPFourierLayout.createSequentialGroup()
                        .addComponent(jLRaio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSRaio, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jLPFourierLayout.setVerticalGroup(
            jLPFourierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLPFourierLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLPFourierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLFiltroF)
                    .addComponent(jRBHighPass)
                    .addComponent(jRBLowPass))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLPFourierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLRaio)
                    .addComponent(jSRaio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLPFourier.setLayer(jLFiltroF, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLPFourier.setLayer(jRBHighPass, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLPFourier.setLayer(jRBLowPass, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLPFourier.setLayer(jLRaio, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLPFourier.setLayer(jSRaio, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jMArquivo.setText("Arquivo");
        jMenuBar1.add(jMArquivo);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jBInserirBD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBAbrirImg, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBSalvarImg, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                        .addComponent(jBSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jBProcessar))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLTipoFiltro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLTamSaida)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBTamSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLPFourier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLPAveraging, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(74, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 517, Short.MAX_VALUE)
                    .addComponent(jDesktopPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 304, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLTipoFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCBTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAbrirImg)
                    .addComponent(jLTamSaida)
                    .addComponent(jCBTamSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBProcessar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBSalvarImg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBInserirBD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBSair))
                    .addComponent(jLPAveraging, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLPFourier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 359, Short.MAX_VALUE)
                    .addComponent(jDesktopPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 359, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBAbrirImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAbrirImgActionPerformed
        // TODO add your handling code here:
        File fileName;
        JFileChooser dialogo = new JFileChooser();
        dialogo.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int result = dialogo.showOpenDialog(this);
        if (result == JFileChooser.CANCEL_OPTION) {
            return;
        }

        fileName = dialogo.getSelectedFile();

        if (fileName == null || fileName.getName().equals("")) {
            JOptionPane.showMessageDialog(this, "Nome de Arquivo Inválido",
                    "Nome de Arquivo Inválido", JOptionPane.ERROR_MESSAGE);
            ///jLImagemSel.setText("");
            liberaBotoes(false);
            return;
        }
        try {
            imagem = ImageIO.read(new File(fileName.toString()));
            ///jLImagemSel.setText("Imagem Selecionada: " + fileName.toString());
            liberaBotoes(true);
            this.add(new JLabel("Imagem Carregada com Sucesso!"), BorderLayout.SOUTH);
            mostraImagem(imagem);
            

        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jBAbrirImgActionPerformed
    private void mostraImagem(Image imagem) {
        JFrame jFImagem = new JFrame("Imagem Carregada...");

        ImageIcon icone = new ImageIcon(imagem);
        JLabel labImagem = new JLabel(icone);
        Container contentPane = jFImagem.getContentPane();
        contentPane.setLayout(new BorderLayout());
        contentPane.add(new JScrollPane(labImagem), BorderLayout.CENTER);
        String imageInfo = "Dimensões: " + imagem.getWidth(labImagem) + "x" + imagem.getHeight(labImagem);
        contentPane.add(new JLabel(imageInfo), BorderLayout.SOUTH);

        jFImagem.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        jFImagem.setSize(800, 400);
        jFImagem.setLocation(400, 200);
        jFImagem.setVisible(true);
    }

    private void ocultaJLP() {
        jLPAveraging.setVisible(false);
        jLPFourier.setVisible(false);
    }
    private void jCBTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBTipoActionPerformed
        // TODO add your handling code here:
        ocultaJLP();
        if (jCBTipo.getSelectedItem().toString().equals("Averaging")) {
            jLPAveraging.setVisible(true);
        }else if (jCBTipo.getSelectedItem().toString().equals("Fourier")) {
            jLPFourier.setVisible(true);
        }
    }//GEN-LAST:event_jCBTipoActionPerformed

    private void jBProcessarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBProcessarActionPerformed
        Image output = null;
        int tamOutput = imagem.getWidth(null);
        if (jCBTamSaida.getSelectedIndex() != 0) {
            tamOutput = Integer.parseInt(jCBTamSaida.getSelectedItem().toString());
        }
        if (jCBTipo.getSelectedItem().toString().equals("Averaging")) {
            noise = jSNoise.getValue();
            templateSize = jSTamModelo.getValue();
            
            output = new InterfaceRmiImp().averaging(imagem, noise, noiseType, templateSize, tamOutput);
        } else if (jCBTipo.getSelectedItem().toString().equals("Fourier")) {
            ratio = jSRaio.getValue();
            output = new InterfaceRmiImp().fourier(imagem, lowpass, ratio, tamOutput);
        }
        if (output == null) {
            JOptionPane.showMessageDialog(null, "Erro! Imagem não Processada. Tente novamente...");
            this.add(new JLabel("Erro..."), BorderLayout.SOUTH);
            
        } else {
            mostraImagem(output);
            
        }
    }//GEN-LAST:event_jBProcessarActionPerformed

    private void jRBGaussianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBGaussianActionPerformed
        // TODO add your handling code here:
        noiseType = "Gaussian";
    }//GEN-LAST:event_jRBGaussianActionPerformed

    private void jRBCondimentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBCondimentActionPerformed
        // TODO add your handling code here:
        noiseType = "Condiment";
    }//GEN-LAST:event_jRBCondimentActionPerformed

    private void jBInserirBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInserirBDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBInserirBDActionPerformed

    private void jBSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBSairActionPerformed

    private void jRBHighPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBHighPassActionPerformed
        // TODO add your handling code here:
        lowpass = false;
    }//GEN-LAST:event_jRBHighPassActionPerformed

    private void jRBLowPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBLowPassActionPerformed
        // TODO add your handling code here:
        lowpass = true;
    }//GEN-LAST:event_jRBLowPassActionPerformed

    private void jCBTamSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBTamSaidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBTamSaidaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bGFiltro;
    private javax.swing.ButtonGroup bGRuido;
    private javax.swing.JButton jBAbrirImg;
    private javax.swing.JButton jBInserirBD;
    private javax.swing.JButton jBProcessar;
    private javax.swing.JButton jBSair;
    private javax.swing.JButton jBSalvarImg;
    private javax.swing.JComboBox jCBTamSaida;
    private javax.swing.JComboBox jCBTipo;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JLabel jLFiltroF;
    private javax.swing.JLayeredPane jLPAveraging;
    private javax.swing.JLayeredPane jLPFourier;
    private javax.swing.JLabel jLRaio;
    private javax.swing.JLabel jLTamModelo;
    private javax.swing.JLabel jLTamSaida;
    private javax.swing.JLabel jLTaxaRuido;
    private javax.swing.JLabel jLTipoFiltro;
    private javax.swing.JLabel jLTipoRuido;
    private javax.swing.JMenu jMArquivo;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JRadioButton jRBCondiment;
    private javax.swing.JRadioButton jRBGaussian;
    private javax.swing.JRadioButton jRBHighPass;
    private javax.swing.JRadioButton jRBLowPass;
    private javax.swing.JSlider jSNoise;
    private javax.swing.JSlider jSRaio;
    private javax.swing.JSlider jSTamModelo;
    // End of variables declaration//GEN-END:variables
}
